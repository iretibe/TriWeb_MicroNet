{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ReverseProxy": {
    "Routes": {
      "account-route": {
        "ClusterId": "accountCluster",
        "Match": {
          "Path": "/api/Account/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Account" },
          { "PathPrefix": "/api/Account" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "branch-route": {
        "ClusterId": "branchCluster",
        "Match": {
          "Path": "/api/Branch/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Branch" },
          { "PathPrefix": "/api/Branch" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "client-route": {
        "ClusterId": "clientCluster",
        "Match": {
          "Path": "/api/Client/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Client" },
          { "PathPrefix": "/api/Client" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "device-route": {
        "ClusterId": "deviceCluster",
        "Match": {
          "Path": "/api/Device/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Device" },
          { "PathPrefix": "/api/Device" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "employee-route": {
        "ClusterId": "employeeCluster",
        "Match": {
          "Path": "/api/Employee/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Employee" },
          { "PathPrefix": "/api/Employee" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "loan-route": {
        "ClusterId": "loanCluster",
        "Match": {
          "Path": "/api/Loan/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Loan" },
          { "PathPrefix": "/api/Loan" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "menu-route": {
        "ClusterId": "menuCluster",
        "Match": {
          "Path": "/api/Menu/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Menu" },
          { "PathPrefix": "/api/Menu" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "pos-route": {
        "ClusterId": "posCluster",
        "Match": {
          "Path": "/api/Pos/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Pos" },
          { "PathPrefix": "/api/Pos" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "product-route": {
        "ClusterId": "productCluster",
        "Match": {
          "Path": "/api/Product/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Product" },
          { "PathPrefix": "/api/Product" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "report-route": {
        "ClusterId": "reportCluster",
        "Match": {
          "Path": "/api/Report/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Report" },
          { "PathPrefix": "/api/Report" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "revenue-route": {
        "ClusterId": "revenueCluster",
        "Match": {
          "Path": "/api/Revenue/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Revenue" },
          { "PathPrefix": "/api/Revenue" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "session-route": {
        "ClusterId": "sessionCluster",
        "Match": {
          "Path": "/api/Session/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Session" },
          { "PathPrefix": "/api/Session" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "sundry-route": {
        "ClusterId": "sundryCluster",
        "Match": {
          "Path": "/api/Sundry/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/Sundry" },
          { "PathPrefix": "/api/Sundry" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "system-route": {
        "ClusterId": "systemCluster",
        "Match": {
          "Path": "/api/System/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/System" },
          { "PathPrefix": "/api/System" },          
          {
            "RequestHeader": "Authorization",
            "Set": "{Request.Headers:Authorization}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{Request.HttpContext.Connection.RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Forwarded-Proto",
            "Set": "{Request.HttpContext.Request.Scheme}"
          }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      },
      "user-route": {
        "ClusterId": "userCluster",
        "Match": {
          "Path": "/api/User/{**catch-all}",
          "Methods": [ "GET", "POST", "PUT", "DELETE" ]
        },
        "Transforms": [
          { "PathRemovePrefix": "/api/User" },
          { "PathPrefix": "/api/User" },          
          { "RequestHeader": "Authorization", "Set": "{Request.Headers:Authorization}" },
          { "RequestHeader": "X-Forwarded-For", "Set": "{Request.HttpContext.Connection.RemoteIpAddress}" },
          { "RequestHeader": "X-Forwarded-Proto", "Set": "{Request.HttpContext.Request.Scheme}" }
        ],
        "Metadata": { "AuthNPolicy": "Bearer" }
      }
    },
    "Clusters": {
      "accountCluster": {
        "Destinations": { "accountApi": { "Address": "https://localhost:7238/" } }
      },
      "branchCluster": {
        "Destinations": { "branchApi": { "Address": "https://localhost:7221/" } }
      },
      "clientCluster": {
        "Destinations": { "clientApi": { "Address": "https://localhost:7243/" } }
      },
      "deviceCluster": {
        "Destinations": { "deviceApi": { "Address": "https://localhost:7163/" } }
      },
      "employeeCluster": {
        "Destinations": { "employeeApi": { "Address": "https://localhost:7131/" } }
      },
      "loanCluster": {
        "Destinations": { "loanApi": { "Address": "https://localhost:7107/" } }
      },
      "menuCluster": {
        "Destinations": { "menuApi": { "Address": "https://localhost:7080/" } }
      },
      "posCluster": {
        "Destinations": { "posApi": { "Address": "https://localhost:7008/" } }
      },
      "productCluster": {
        "Destinations": { "productApi": { "Address": "https://localhost:7121/" } }
      },
      "reportCluster": {
        "Destinations": { "reportApi": { "Address": "https://localhost:7036/" } }
      },
      "revenueCluster": {
        "Destinations": { "revenueApi": { "Address": "https://localhost:7022/" } }
      },
      "sessionCluster": {
        "Destinations": { "sessionApi": { "Address": "https://localhost:7267/" } }
      },
      "sundryCluster": {
        "Destinations": { "sundryApi": { "Address": "https://localhost:7248/" } }
      },
      "systemCluster": {
        "Destinations": { "systemApi": { "Address": "https://localhost:7275/" } }
      },
      "userCluster": {
        "Destinations": { "userApi": { "Address": "https://localhost:7097/" } }
      }
    }
  },
  "MicroNetIdpSettings": {
    "ApiName": "micronet.gateway.api.code",
    "TokenUrl": "https://localhost:5001/connect/token",
    "AuthorityUrl": "https://localhost:5001/connect/authorize",
    "Authority": "https://localhost:5001",
    "ApiSecret": "ERT#$%^*&%%$$#TGHK789$%^",
    "IssuerUri": "https://localhost:5001",
    "RequireHttpsMetadata": "false",
    "SaveToken": "true",
    "Scopes": [
      "address",
      "email",
      "micronetaccountapi",
      "micronetbranchapi",
      "micronetclientapi",
      "micronetdeviceapi",
      "micronetemployeeapi",
      "micronetloanapi",
      "micronetposapi",
      "micronetproductapi",
      "micronetreportingapi",
      "micronetrevenueapi",
      "micronetsessionapi",
      "micronetsundryapi",
      "micronetsystemapi",
      "micronetuserapi",
      "openid",
      "profile"
    ]
  }
}
