// <auto-generated />
using System;
using MicroNet.Product.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroNet.Product.Infrastructure.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20250601102840_ProductLoanMigration")]
    partial class ProductLoanMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("product")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MicroNet.Product.Core.Entities.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GracePeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LoanName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("MaximumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentageOfSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RepaymentPeriod")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Loans", "product");
                });

            modelBuilder.Entity("MicroNet.Product.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", "product");
                });

            modelBuilder.Entity("MicroNet.Product.Core.Entities.Loan", b =>
                {
                    b.OwnsOne("MicroNet.Product.Core.ValueObjects.AuditInfo", "AuditInfo", b1 =>
                        {
                            b1.Property<Guid>("LoanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("CreatedAt");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("DeletedAt");

                            b1.Property<string>("DeletedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DeletedBy");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("UpdatedAt");

                            b1.Property<string>("UpdatedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("UpdatedBy");

                            b1.HasKey("LoanId");

                            b1.ToTable("Loans", "product");

                            b1.WithOwner()
                                .HasForeignKey("LoanId");
                        });

                    b.Navigation("AuditInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("MicroNet.Product.Core.Entities.Product", b =>
                {
                    b.OwnsOne("MicroNet.Product.Core.ValueObjects.AuditInfo", "AuditInfo", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("CreatedAt");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("DeletedAt");

                            b1.Property<string>("DeletedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DeletedBy");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("UpdatedAt");

                            b1.Property<string>("UpdatedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("UpdatedBy");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products", "product");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("AuditInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
